/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <10>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };
    };

    macros {
        search_init: toggle_sidebar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp COLON &kp PRCNT &kp S &kp FSLH>;

            label = "TOGGLE_SIDEBAR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &lt 10 Q  &kp W    &kp E     &kp R      &kp T        &kp Y    &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp ESC    &lt 8 A   &lt 5 S  &lt 4 D   &lt 3 F    &kp G        &kp H    &kp J      &kp K      &kp L    &kp SQT   &kp CAPSLOCK
&kp LCTRL  &lt 9 Z   &kp X    &lt 7 C   &lt 6 V    &kp B        &kp N    &kp M      &kp COMMA  &kp DOT  &kp RGUI  &kp RCTRL
                              &kp LGUI  &kp LSHFT  &kp SPACE    &kp RET  &kp RSHFT  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | CTRL |     |     |     |     |     |   |     |     |     |     |     |  CAPS|
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp K_BACK    &kp K_FORWARD  &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LCTRL   &trans        &trans         &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &kp CAPS
                                         &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        Delimiters {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EXCLAMATION  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOLLAR       &trans  &trans
                        &trans  &trans  &trans    &trans  &trans                &trans
            >;
        };

        Arithmetic {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LESS_THAN  &kp GREATER_THAN  &kp POUND    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp PLUS       &kp MINUS         &kp EQUAL    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp ASTERISK   &kp FSLH          &kp PERCENT  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans         &trans
            >;
        };

        Punctuation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp SQT    &kp DOUBLE_QUOTES  &kp GRAVE      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp COMMA  &kp DOT            &kp AMPERSAND  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp SEMI   &kp COLON          &kp TILDE      &trans  &trans
                        &trans  &trans  &trans    &trans  &trans     &trans
            >;
        };

        Numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0  &kp N1  &kp N2  &kp N3  &kp N0     &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Remaining {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp CARET      &trans          &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp PIPE       &kp AT_SIGN     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp BACKSLASH  &kp UNDERSCORE  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans         &trans
            >;
        };

        Navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(LC(TAB))  &kp TAB   &kp TAB        &kp RC(TAB)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT         &kp DOWN  &kp UP         &kp RIGHT    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &kp RET   &kp PAGE_DOWN  &kp PAGE_UP  &trans  &trans
                        &trans  &trans  &trans    &trans           &trans    &trans
            >;
        };

        vscode_vim {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LG(B)      &kp LS(LG(P))  &kp LG(P)  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LC(GRAVE)  &search_init   &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &trans         &trans     &trans  &trans  &trans
                        &trans  &trans  &trans    &trans         &trans         &trans
            >;
        };

        zmk {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR  &trans      &trans  &trans  &bt BT_PRV  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans      &trans  &trans  &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &bt BT_NXT  &trans  &trans  &trans      &trans
                        &trans  &trans  &trans    &trans      &trans      &trans
            >;
        };
    };
};
